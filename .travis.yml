language: cpp
sudo: false

matrix:
  include:
    - addons: &addons
      - build-essential
      - git
      - wget
      - libatlas-base-dev
      - libboost-all-dev
      - libgflags-dev
      - libgoogle-glog-dev
      - libhdf5-serial-dev
      - libleveldb-dev
      - liblmdb-dev
      - libopencv-dev
      - libprotobuf-dev
      - libsnappy-dev
      - protobuf-compiler
      - python-dev
      - python-numpy
      - python-pip
      - python-setuptools
    # Linux C++14 GCC builds
    - os: linux
      compiler: gcc
      addons: &gcc6
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - *addons
      env:
        - COMPILER='g++-6'
        - BUILD_TYPE='Release'
        - WITH_CUDA=false
        - WITH_CMAKE=true
        - CPU_ONLY=1



before_install:
  - eval "$(curl -sL https://raw.githubusercontent.com/travis-ci/gimme/master/gimme | bash)"
  - go env
  - export GOPATH=$HOME/gopath
  - export PATH=$HOME/gopath/bin:$PATH
  - mkdir -p $HOME/gopath/src/github.com/rai-project/go-caffe
  - rsync -az ${TRAVIS_BUILD_DIR}/ $HOME/gopath/src/github.com/rai-project/go-caffe/
  - export TRAVIS_BUILD_DIR=$HOME/gopath/src/github.com/rai-project/go-caffe
  - cd $HOME/gopath/src/github.com/rai-project/go-caffe
  - eval "${MATRIX_EVAL}"
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.9/cmake-3.9.0-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      which cmake || brew install cmake
    fi
  - if [ $TRAVIS_OS_NAME == osx ]; then brew update && brew install boost snappy leveldb protobuf gflags glog szip lmdb homebrew/science/opencv; fi
  - git clone --depth 1 https://github.com/BVLC/caffe.git caffe
  - pip install --upgrade pip
  - mkdir build && cd build
  - cmake -DCPU_ONLY=ON -DBUILD_python=OFF -DBUILD_docs=OFF ${DEPS_DIR}/caffe
  - make
  - make install
  - go get github.com/Masterminds/glide


install:
  - cd ${TRAVIS_BUILD_DIR}
  - glide install --force
  - rm -fr vendor/github.com/Sirupsen
  - find vendor -type f -exec sed -i 's/Sirupsen/sirupsen/g' {} +
  - go build

script:
  - echo "Skip tests..."
after_script:
  - go test -race -v $(glide novendor)

